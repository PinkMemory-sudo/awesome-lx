#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

mybatis:
 mapper-locations: classpath*:mappers/*Mapper.xml

#spring:
#  datasource:
#   driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
#   url: jdbc:shardingsphere:classpath:config.yaml

spring:
 shardingsphere:
  props:
   sql-show: true
  mode:
   type: Standalone
   repository:
    type: JDBC
    props:
     path: demo
  datasource:
   names: ds_0,ds_1
   ds_0:
    type: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.1.9:3306/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: Pass@word!1
    maxPoolSize: 10
   ds_1:
    type: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.1.9:3306/demo_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: Pass@word!1
    maxPoolSize: 10
  rules:
   sharding:
    tables:
     t_order:
      actualDataNodes: ds_$->{0..1}.t_order_$->{0..1}
      tableStrategy:
       standard:
        shardingColumn: order_id
        shardingAlgorithmName: t-order-inline
      keyGenerateStrategy:
       column: order_id
       keyGeneratorName: snowflake
     t_order_item:
      actualDataNodes: ds_$->{0..1}.t_order_item_$->{0..1}
      tableStrategy:
       standard:
        shardingColumn: order_id
        shardingAlgorithmName: t-order-item-inline
      keyGenerateStrategy:
       column: order_item_id
       keyGeneratorName: snowflake
    bindingTables:
     - t_order,t_order_item
    defaultDatabaseStrategy:
     standard:
      shardingColumn: user_id
      shardingAlgorithmName: database-inline

    shardingAlgorithms:
     database-inline:
      type: INLINE
      props:
       algorithm-expression: ds_${user_id % 2}
     t-order-inline:
      type: INLINE
      props:
       algorithm-expression: t_order_${order_id % 2}
     t-order-item-inline:
      type: INLINE
      props:
       algorithm-expression: t_order_item_${order_id % 2}
    keyGenerators:
     snowflake:
      type: SNOWFLAKE


